rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAllowedUsername(user) {
      return user.size() > 2 && user.size() < 16
    }

    match /likes/{likeId} {
      allow read;
      allow create: if request.resource.id == request.auth.uid + '_' + request.resource.data.postId 
        && request.resource.data.size() == 2
        && request.resource.data.postId is string
        && request.resource.data.userId is string;
      allow delete: if request.auth.uid == resource.data.userId;
    }

    match /locations/{locationId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null
        && request.resource.data.g.size() == 2
        && request.resource.data.g.geohash is string
        && request.resource.data.g.geopoint is latlng
        && request.resource.data.coordinates is latlng;
    }

    match /comments/{commentId} {
      allow read;
    }

    match /notifications/{notificationId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId
        && request.resource.data.keys().hasOnly(['createdAt', 'fromUserId', 'postId', 'read', 'type', 'userId'])
        && request.resource.data.createdAt == resource.data.createdAt
        && request.resource.data.fromUserId == resource.data.fromUserId
        && request.resource.data.postId == resource.data.postId
        && request.resource.data.read is bool
        && request.resource.data.type == resource.data.type
        && request.resource.data.userId == resource.data.userId;
    }

    match /posts/{postId} {
      allow create;
      allow read: if resource.data.published == true || request.auth.uid == resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId
        && (resource.data.published == false || request.resource.data.keys().hasOnly(['caption', 'rating']));
      allow delete: if request.auth.uid == resource.data.userId;
    }

    match /users/{user} {
      allow read;
      allow update: if resource.data.id == null && isAllowedUsername(user);
      allow create: if request.auth == null && isAllowedUsername(user);
    }
  }
}
